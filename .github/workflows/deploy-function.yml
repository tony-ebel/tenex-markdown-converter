name: Deploy Cloud Function

on:
  push:
    branches:
      - main
    tags:
      - '*v'

jobs:
  set-environment:
    name: Set Environment
    outputs:
      deploy-env: ${{ steps.setenv.outputs.deploy-env }}
      version: ${{ steps.setenv.outputs.version }}
    runs-on: ubuntu-22.04

    steps:
    - id: setenv
      run: |
        if [[ $GITHUB_REF == refs/heads/main ]]; then
          echo "deploy-env=stage" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_SHA}" >> $GITHUB_OUTPUT
        elif [[ $GITHUB_REF_TYPE == "tag" && $GITHUB_REF_NAME == v* ]]; then 
          echo "deploy-env=prod" >> $GITHUB_OUTPUT
          echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
        fi

  get-function:
    needs: set-environment
    name: Retrive Cloud Function Details Managed by Terraform
    outputs:
      sa: ${{ steps.getdetails.outputs.sa }}
      pubsub: ${{ steps.getdetails.outputs.pubsub }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_JSON }}
          token_format: access_token

      - name: Setup Tofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: "1.6.0"

      - name: Tofu Init
        run: tofu init

      - name: Get Function Details
        id: getdetails
        run: |
          sa=$(tofu output -raw function_sa_${{ needs.set-environment.outputs.deploy-env }})
          pubsub=$(tofu output -raw pubsub_topic_${{ needs.set-environment.outputs.deploy-env }})
          echo "sa=${sa}" >> $GITHUB_OUTPUT
          echo "pubsub=${pubsub}" >> $GITHUB_OUTPUT

  deploy-function:
    needs: [set-environment, get-function]
    name: Build and Deploy
    runs-on: ubuntu-22.04
    environment:
      name: ${{ needs.set-environment.outputs.deploy-env }}
    permissions:
      contents: read
      id-token: write
    concurrency:
      group: ${{ needs.set-environment.outputs.deploy-env }}
      cancel-in-progress: true

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v3
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_JSON }}
          token_format: access_token

      - name: Deploy Cloud Function
        uses: google-github-actions/deploy-cloud-functions@v4
        with:
          name: md-converter-${{ needs.set-environment.outputs.deploy-env }}
          source_dir: ./md-converter
          runtime: python312
          entry_point: pubsub_trigger
          service_account: ${{ needs.get-function.outputs.sa }}
          event_trigger_type: providers/cloud.pubsub/eventTypes/topic.publish
          event_trigger_resource: ${{ needs.get-function.outputs.pubsub }}
          labels: |-
            version=${{ needs.set-environment.outputs.version }}
